//
// Procedure Name:
//      iSkinDeformReplace
//
// Description:
//      Replace the selected influence with another node.
//
// Input Arguments:
//      None
//
// Return Value:
//      string          The name of the iSkinDeform node.
//
global proc string iSkinDeformReplace()
{
    string $deformNode;

    string $sel[] = `ls -selection -transforms -long`;
    if (size($sel) == 2)
    {
        string $shapes[] = `listRelatives -shapes $sel[0]`;
        string $conn[] = `listConnections -source 0
                                          -destination 1
                                          -plugs 1
                                          ($shapes[0] + ".worldMesh[0]")`;
        if (size($conn) == 0)
            return $deformNode;

        string $connElements[];
        tokenize $conn[0] "." $connElements;
        $deformNode = $connElements[0];
        int $index = `match "[0-9]+" $connElements[1]`;
        if ($deformNode != "")
        {
            disconnectAttr ($shapes[0] + ".worldMatrix")
                           ($deformNode + ".influenceMatrix[" + $index + "]");
            if (`nodeType $shapes[0]` == "nurbsCurve")
                disconnectAttr ($shapes[0] + ".worldSpace[0]") ($deformNode + ".attractorCurve[" + $index + "]");

            connectAttr -force
                        ($shapes[1] + ".worldMatrix")
                        ($deformNode + ".influenceMatrix[" + $index + "]");
            float $pos[] = `getAttr ($sel[1] + ".translate")`;
            setAttr ($deformNode + ".restPositionList[" + $index + "]") $pos[0] $pos[1] $pos[2];

            $shapes = `listRelatives -shapes $sel[1]`;
            if (`nodeType $shapes[0]` == "nurbsCurve")
            {
                connectAttr -force
                            ($shapes[0] + ".worldSpace[0]")
                            ($deformNode + ".attractorCurve[" + $index + "]");
            }
        }
        else
            warning "Selection is not connected to a collider node.";
    }
    else
        warning "Select the old and the new influence.";

    return $deformNode;
}

// ---------------------------------------------------------------------
// MIT License
//
// Copyright (c) 2021 Ingo Clemens, brave rabbit
// iDeform, iCollide, iDisplace, iSkinDeform are under the terms of the
// MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Author: Ingo Clemens    www.braverabbit.com
// ---------------------------------------------------------------------
